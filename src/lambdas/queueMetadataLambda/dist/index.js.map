{
  "version": 3,
  "sources": ["../handler.ts", "../services/retrieveActivity.service.ts", "../services/retrievePlan.service.ts"],
  "sourcesContent": ["import { getActivityById, getActivities } from './services/retrieveActivity.service'\nimport { getPlanByActivityId } from './services/retrievePlan.service'\n\nexport const handler = async (event: any, context: any): Promise<any> => {\n  try {\n    console.log(event, '< event')\n    if (event.info.parentTypeName === 'Query') {\n      switch (event.info.fieldName) {\n        case 'getActivityById':\n          return getActivityById()\n        case 'getActivities':\n          return await getActivities(event.arguments)\n        case 'getPlanByActivityId':\n          return getPlanByActivityId()\n      }\n    }\n  } catch (e) {\n    console.log(e)\n  }\n}\n", "import type { Activity } from '../types'\n\ninterface ActivityArgs {\n  userId: string\n  limit: number\n  offset: number\n  dateFrom: number\n  dateTo: number\n  token: string\n}\n\nexport const getActivityById = (): any => {\n  return {\n    id: '56789',\n    name: 'Race',\n    distance: 50.0,\n    start_date: '56789'\n  }\n}\n\nexport const getActivities = async (args: ActivityArgs): Promise<any> => {\n  const activities = await fetchActivities(args)\n\n  console.log(activities, '<< activities')\n\n  return activities.map((activity: Activity) => {\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const { id, name, start_date, distance } = activity\n    return { id, name, start_date, distance }\n  })\n}\n\nconst fetchActivities = async (args: ActivityArgs): Promise<any> => {\n  const url = `https://www.strava.com/api/v3/athlete/activities?before=${args.dateTo}&after=${args.dateFrom}&per_page=${args.limit}&page=${args.offset}`\n  const token = `Bearer ${args.token}`\n\n  console.log(url, '<< url')\n\n  try {\n    const response = await fetch(url, {\n      method: 'GET',\n      headers: {\n        Authorization: token\n      }\n    })\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`)\n    }\n\n    return await response.json()\n  } catch (error) {\n    console.error(error)\n    throw error\n  }\n}\n", "export const getPlanByActivityId = (): any => {\n  return {\n    id: '123',\n    name: 'String',\n    startTime: 'date string',\n    goalHours: 5,\n    goalMinutes: 5,\n    mileData: [{\n      elevationGain: 5,\n      elevationLoss: 5,\n      pace: 50,\n      time: 50\n    }]\n  }\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GCWO,IAAMI,EAAkB,KACtB,CACL,GAAI,QACJ,KAAM,OACN,SAAU,GACV,WAAY,OACd,GAGWC,EAAgB,MAAOC,GAAqC,CACvE,IAAMC,EAAa,MAAMC,EAAgBF,CAAI,EAE7C,eAAQ,IAAIC,EAAY,eAAe,EAEhCA,EAAW,IAAKE,GAAuB,CAE5C,GAAM,CAAE,GAAAC,EAAI,KAAAC,EAAM,WAAAC,EAAY,SAAAC,CAAS,EAAIJ,EAC3C,MAAO,CAAE,GAAAC,EAAI,KAAAC,EAAM,WAAAC,EAAY,SAAAC,CAAS,CAC1C,CAAC,CACH,EAEML,EAAkB,MAAOF,GAAqC,CAClE,IAAMQ,EAAM,2DAA2DR,EAAK,MAAM,UAAUA,EAAK,QAAQ,aAAaA,EAAK,KAAK,SAASA,EAAK,MAAM,GAC9IS,EAAQ,UAAUT,EAAK,KAAK,GAElC,QAAQ,IAAIQ,EAAK,QAAQ,EAEzB,GAAI,CACF,IAAME,EAAW,MAAM,MAAMF,EAAK,CAChC,OAAQ,MACR,QAAS,CACP,cAAeC,CACjB,CACF,CAAC,EAED,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,EAG1D,OAAO,MAAMA,EAAS,KAAK,CAC7B,OAASC,EAAO,CACd,cAAQ,MAAMA,CAAK,EACbA,CACR,CACF,ECvDO,IAAMC,EAAsB,KAC1B,CACL,GAAI,MACJ,KAAM,SACN,UAAW,cACX,UAAW,EACX,YAAa,EACb,SAAU,CAAC,CACT,cAAe,EACf,cAAe,EACf,KAAM,GACN,KAAM,EACR,CAAC,CACH,GFVK,IAAMC,EAAU,MAAOC,EAAYC,IAA+B,CACvE,GAAI,CAEF,GADA,QAAQ,IAAID,EAAO,SAAS,EACxBA,EAAM,KAAK,iBAAmB,QAChC,OAAQA,EAAM,KAAK,UAAW,CAC5B,IAAK,kBACH,OAAOE,EAAgB,EACzB,IAAK,gBACH,OAAO,MAAMC,EAAcH,EAAM,SAAS,EAC5C,IAAK,sBACH,OAAOI,EAAoB,CAC/B,CAEJ,OAASC,EAAG,CACV,QAAQ,IAAIA,CAAC,CACf,CACF",
  "names": ["handler_exports", "__export", "handler", "__toCommonJS", "getActivityById", "getActivities", "args", "activities", "fetchActivities", "activity", "id", "name", "start_date", "distance", "url", "token", "response", "error", "getPlanByActivityId", "handler", "event", "context", "getActivityById", "getActivities", "getPlanByActivityId", "e"]
}
